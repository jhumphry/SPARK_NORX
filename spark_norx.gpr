-- NORX
-- an Ada implementation of the NORX Authenticated Encryption Algorithm
-- created by Jean-Philippe Aumasson, Philipp Jovanovic and Samuel Neves

-- Copyright (c) 2016, James Humphry - see LICENSE file for details

library project SPARK_NORX is

   type Mode_Type is ("debug", "optimize", "optimise");
   Mode : Mode_Type := external ("mode", "debug");

   for Languages use ("Ada");

   for Library_Name use "spark_norx";
   for Library_Kind use "static";

   for Library_Interface use   ("NORX",
                                "NORX.Compare_Tags",
                                "NORX_Definitions",
                                "NORX_Load_Store",
                                "NORX.Access_Internals",
                                "NORX.Utils",
                                "NORX0841",
                                "NORX1641",
                                "NORX3241",
                                "NORX3261",
                                "NORX6441",
                                "NORX6461");

   for Source_Dirs use ("src/");
   for Object_Dir use "build/";
   for Library_Dir use "lib/";

   package Builder is
      for Default_Switches ("ada") use ("-j2");
   end Builder;

   package Compiler is
      case Mode is
         when "debug" =>
            for Default_Switches ("ada") use ("-fstack-check", "-g",
                                              "-gnat2012", "-gnata",
                                              "-gnatf", "-gnato",
                                              "-gnatVa", "-gnateA",
                                              "-gnatwa.f", "-gnatwZ",
                                              "-gnatyaAbCdfhiknprux");

         when "optimize" | "optimise" =>
            for Default_Switches ("ada") use ("-gnat2012", "-O2",
                                              "-gnatn", "-funroll-loops");
            for Switches ("norx-compare_tags.adb") use ("-gnat2012", "-O0",
                                                        "-gnatn",
                                                        "-funroll-loops");

      end case;
   end Compiler;

   package Prove is
      for Switches use ("-j2", "--timeout=3",
                        "--proof=progressive",
                        "--warnings=continue");
   end Prove;

end SPARK_NORX;
